Microsoft (R) Macro Assembler Version 6.00AD    	    06/21/25 18:53:14
v308080.asm						     Page 1 - 1


				;	CP/M 2.2 player for generic MS-DOS and V20/30 Rev. 1.00
				;
				;	Copyright (C) 2025 by Gazelle
				;
				;Permission is hereby granted, free of charge, to any person
				;obtaining a copy of this software and associated documentation
				;files (the "Software"), to deal in the Software without
				;restriction, including without limitation the rights to use,
				;copy, modify, merge, publish, distribute, sublicense, and/or sell
				;copies of the Software, and to permit persons to whom the
				;Software is furnished to do so, subject to the following
				;conditions:
				;
				;The above copyright notice and this permission notice shall be
				;included in all copies or substantial portions of the Software.
				;
				;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
				;EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
				;OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
				;NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
				;HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
				;WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
				;FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
				;OTHER DEALINGS IN THE SOFTWARE.

				;Repository https://github.com/Gazelle8087
				;2025/06/21 Rev. 1.00 Initial release

						page 0,150
						.model	tiny
						.186
 0000						.code

						org	100h

						assume	ds:nothing,es:nothing,ss:nothing

 0100  E9 01A7			start:		jmp	hajime
						align	2

 = 00FF				int_no		equ	0ffh

 0104				save_al		label	byte
 0104 0000			save_ax		dw	?
 0106 0000			save_bx		dw	?
 0108 0000			save_cx		dw	?
 010A 0000			save_dx		dw	?
 010C 0000			save_bp		dw	?
 010E 0000			z80_seg		dw	?
 0110 0000			cpm_file_handle	dw	?
 0112 0000			cpm_arg_offset	dw	?
 0114 0000			fcb_addr	dw	?
 0116 00			path_flag	db	0
 0117 00			env_flag	db	0
 0118 00			drv_flag	db	0
 0119 0000			file_name_end	dw	?

 011B 2E 43 4F 4D 00		com_str			db	'.COM',0
 0120 2E 43 50 4D 00		cpm_str			db	'.CPM',0
 0125 5A 5F 45 4D 3D		env_key			db	'Z_EM='
 012A  0080 [			env_str			db	128 dup (0)
        00
       ]
 01AA  0080 [			cpm_file_name		db	128 dup (?)
        00
       ]
 022A  0080 [			buffer_area		db	128 dup (?)
        00
       ]

				;---------------------------------------------

 02AA				hajime:
 02AA  54					push	sp
 02AB  58					pop	ax
 02AC  3B C4					cmp	ax,sp
 02AE  75 03					jne	using_v30_1	;V20/30 判定1
 02B0  E9 02F4					jmp	need_v30
 02B3				using_v30_1:
 02B3  B8 0100					mov	ax,100h
 02B6  D5 00					db	0d5h,00h	;AAD 00
 02B8  75 03					jnz	using_v30	;V20/30 判定2
 02BA  E9 02EA					jmp	need_v30
 02BD				using_v30:
 02BD  8C C8					mov	ax,cs
 02BF  8E C0					mov	es,ax
 02C1  8E D8					mov	ds,ax
 02C3  BA 04A9 R				mov	dx,offset open_msg
 02C6  B4 09					mov	ah,9
 02C8  CD 21					int	21h
 02CA  B4 4A					mov	ah,4ah		;128KB 残してメモリ開放
 02CC  BB 2000					mov	bx,2000h
 02CF  CD 21					int	21h
 02D1  73 03					jnc	main_read_emulator
 02D3  E9 02C2					jmp	no_mem

 02D6				main_read_emulator:
 02D6  8C C8					mov	ax,cs
 02D8  8E D0					mov	ss,ax
 02DA  BC F000					mov	sp,0f000h
 02DD  05 1000					add	ax,1000h
 02E0  2E: A3 010E R				mov	z80_seg,ax

 02E4  E8 02D2					call	search_env		;環境変数 Z_EMをサーチ

 02E7  E8 033A					call	read_cpm_file		;CPM80実行ファイルを読み込み

 02EA  E8 0454					call	setup_cpm_area		;CPM80実行に必要なメモリエリアを設定

				;--------------------------------------

 02ED  BB 0000					mov	bx,0
 02F0  8E C3					mov	es,bx
 02F2  BB 03FC					mov	bx,int_no*4
 02F5  26: C7 07 0100				mov	es:[bx],word ptr 100h	;割り込みベクトル下位に 100h(=PC)を設定
 02FA  2E: 8E 1E 010E R				mov	ds,z80_seg
 02FF  26: 8C 5F 02				mov	es:[bx+2],ds

 0303  BD FF82					mov	bp,CPM_BDOS-2		;SP設定
 0306  3E: C7 46 00 0000			mov	ds:[bp],word ptr 0
 030C  2E: 89 2E 010C R				mov	save_bp,bp

 0311  BA 0080					mov	dx,80h			;DMAアドレスを80hに設定
 0314  B4 1A					mov	ah,1ah
 0316  CD 21					int	21h
 0318				go_cpm:
 0318  2E: 8B 2E 010C R		no_op:		mov	bp,save_bp
 031D  2E: 8E 1E 010E R				mov	ds,z80_seg

				;		mov	ax,save_ax
				;		mov	bx,save_bx
				;		mov	cx,save_cx
				;		mov	dx,save_dx

 0322  0F FF FF					db	0fh,0ffh,int_no		;BRKEM

				;		mov	save_ax,ax
				;		mov	save_bx,bx
				;		mov	save_cx,cx
				;		mov	save_dx,dx

 0325  3E: 8B 76 00				mov	si,ds:[bp]
 0329  26: 89 36 03FC				mov	es:[int_no*4],si	;戻り先アドレスを ベクトル下位に設定
 032E  83 C5 02					add	bp,2			;SP調整
 0331  2E: 89 2E 010C R				mov	save_bp,bp		;SP保存

 0336  3C 00					cmp	al,0			;BDOS模擬ルーチンでは AL=0を設定
 0338  74 0F					je	to_bdos

 033A  3C 10					cmp	al,10h			;BIOS1模擬ルーチンでは AL=BIOS番号を設定
 033C  77 47					ja	bios_no_error
 033E  8A D8					mov	bl,al
 0340  B7 00					mov	bh,0
 0342  03 DB					add	bx,bx
 0344  2E: FF A7 0458 R				jmp	word ptr cs:[bx+bios_table]

 0349  80 F9 28			to_bdos:	cmp	cl,28h
 034C  77 3E					ja	bdos_no_error
 034E  8A D9					mov	bl,cl
 0350  B7 00					mov	bh,0
 0352  03 DB					add	bx,bx
 0354  2E: FF A7 03A2 R				jmp	word ptr cs:[bx+bdos_table]

				;---------------------------------
 0359 49 6E 63 6F 6D 70		bdos_no_error_msg	db	'Incompatible bdos no $'
       61 74 69 62 6C 65
       20 62 64 6F 73 20
       6E 6F 20 24
 036F 49 6E 63 6F 6D 70		bios_no_error_msg	db	'Incompatible bios no $'
       61 74 69 62 6C 65
       20 62 69 6F 73 20
       6E 6F 20 24

 0385				BIOS_no_error:
 0385  8A C8					mov	cl,al
 0387  BA 036F R				mov	dx,offset bios_no_error_msg
 038A  EB 03					jmp	bdos_bios_em_err
 038C				BDOS_no_error:
 038C  BA 0359 R				mov	dx,offset bdos_no_error_msg
 038F				bdos_bios_em_err:
 038F  8C C8					mov	ax,cs
 0391  8E D8					mov	ds,ax
 0393  B4 09					mov	ah,9
 0395  CD 21					int	21h
 0397  8A C1					mov	al,cl
 0399  E8 04B4					call	dsphex2
 039C  B8 4C00					mov	ax,4c00h
 039F  CD 21					int	21h

				;---------------------------------
						even
 03A2 03F4 R			bdos_table	dw	sonomama	;0  system reset
 03A4  03F4 R					dw	sonomama	;1  input from console
 03A6  03F4 R					dw	sonomama	;2  output to consple
 03A8  03F4 R					dw	sonomama	;3  input from reader
 03AA  03F4 R					dw	sonomama	;4  output to punch
 03AC  03F4 R					dw	sonomama	;5  output to printer
 03AE  03F4 R					dw	sonomama	;6  direct console I/O
 03B0  0408 R					dw	get_io_byte	;7  get io byte
 03B2  040E R					dw	set_io_byte	;8  set io byte
 03B4  03F4 R					dw	sonomama	;9  output string to console
 03B6  03F4 R					dw	sonomama	;A  bufferd input from console
 03B8  03FB R					dw	bdos_const	;B  check console status
 03BA  0415 R					dw	get_version	;C  get version no
 03BC  03F4 R					dw	sonomama	;D  disk reset
 03BE  03F4 R					dw	sonomama	;E  disk select
 03C0  03F4 R					dw	sonomama	;F  open
 03C2  03F4 R					dw	sonomama	;10 close
 03C4  041B R					dw	file_search1	;11 search first
 03C6  0427 R					dw	file_search2	;12 search next
 03C8  03F4 R					dw	sonomama	;13 delete
 03CA  0433 R					dw	bdos_read	;14 read seaquential
 03CC  03F4 R					dw	sonomama	;15 write seaquential
 03CE  03F4 R					dw	sonomama	;16 create
 03D0  03F4 R					dw	sonomama	;17 rename
 03D2  0455 R					dw	get_login_vect	;18 get login vector
 03D4  03F4 R					dw	sonomama	;19 get current drive
 03D6  03F4 R					dw	sonomama	;1A set DMA addr
 03D8  0455 R					dw	get_alloc_addr	;1B get allocation addr
 03DA  0455 R					dw	set_ro		;1C set R/O
 03DC  0455 R					dw	get_ro_vect	;1D get R/O vector
 03DE  0455 R					dw	set_file_attr	;1E set file attrib
 03E0  0455 R					dw	get_DPB_addr	;1F get DPB addr
 03E2  0440 R					dw	get_set_user	;20 get/set user code
 03E4  03F4 R					dw	sonomama	;21 read random
 03E6  03F4 R					dw	sonomama	;22 write random
 03E8  03F4 R					dw	sonomama	;23 get file size
 03EA  03F4 R					dw	sonomama	;24 set random record
 03EC  0455 R					dw	reset_disk2	;25 reset disk by vector
 03EE  0318 R					dw	no_op		;26
 03F0  0318 R					dw	no_op		;27
 03F2  03F4 R					dw	sonomama	;28 write random w/zero fill

 03F4  8A E1			sonomama:	mov	ah,cl
 03F6  CD 21					int	21h
 03F8  E9 FF1D					jmp	go_cpm

 03FB				bdos_const:
 03FB  B4 0B					mov	ah,0bh
 03FD  CD 21					int	21h
 03FF  3C 00					cmp	al,0
 0401  74 02					je	bdos_noready
 0403  B0 01					mov	al,1
 0405  E9 FF10			bdos_noready:	jmp	go_cpm

 0408  A0 0003			get_io_byte:	mov	al,ds:[0003]
 040B  E9 FF0A					jmp	go_cpm

 040E  88 16 0003		set_io_byte:	mov	ds:[0003],dl
 0412  E9 FF03					jmp	go_cpm

 0415  BB 0022			get_version:	mov	bx,22h
 0418  E9 FEFD					jmp	go_cpm

 041B  2E: 89 16 0114 R		file_search1:	mov	fcb_addr,dx
 0420  B4 11					mov	ah,11h
 0422  CD 21					int	21h
 0424  E9 FEF1					jmp	go_cpm

 0427  2E: 8B 16 0114 R		file_search2:	mov	dx,fcb_addr
 042C  B4 12					mov	ah,12h
 042E  CD 21					int	21h
 0430  E9 FEE5					jmp	go_cpm

 0433  B4 14			bdos_read:	mov	ah,14h
 0435  CD 21					int	21h
 0437  3C 03					cmp	al,3
 0439  75 02					jne	bdos_read_exit
 043B  B0 00					mov	al,0
 043D  E9 FED8			bdos_read_exit:	jmp	go_cpm

 0440				get_set_user:
 0440  80 FA FF					cmp	dl,0ffh
 0443  75 05					jne	set_user_code
 0445  B0 00					mov	al,0
 0447  E9 FECE					jmp	go_cpm

 044A  80 FA 00			set_user_code:	cmp	dl,0
 044D  74 03					je	set_user_code_0
 044F  E9 FF3A					jmp	bdos_no_error
 0452  E9 FEC3			set_user_code_0:jmp	go_cpm

 0455				bdos_reader:	;3  input from reader
 0455				bdos_punch:	;4  output to punch
 0455				get_login_vect:	;18 get login vector
 0455				get_alloc_addr:	;1B get allocation addr
 0455				set_ro:		;1C set R/O
 0455				get_ro_vect:	;1D get R/O vector
 0455				set_file_attr:	;1E set file attrib
 0455				get_DPB_addr:	;1F get DPB addr
 0455				reset_disk2:	;25 reset disk by vector

 0455  E9 FF34					jmp	bdos_no_error
				;--------------------------------------
 0458 047A R			bios_table	dw	bios_boot
 045A  047A R					dw	bios_wboot
 045C  047F R					dw	bios_const
 045E  048A R					dw	bios_conin
 0460  0491 R					dw	bios_conout
 0462  04A6 R					dw	bios_list
 0464  04A6 R					dw	bios_punch
 0466  04A6 R					dw	bios_reader
 0468  04A6 R					dw	bios_home
 046A  04A6 R					dw	bios_seldsk
 046C  04A6 R					dw	bios_settrk
 046E  04A6 R					dw	bios_setsec
 0470  04A6 R					dw	bios_setdma
 0472  04A6 R					dw	bios_read
 0474  04A6 R					dw	bios_write
 0476  04A6 R					dw	bios_listst
 0478  04A6 R					dw	bios_sectran

 047A				bios_boot:
 047A  B8 4C00			bios_wboot:	mov	ax,4c00h
 047D  CD 21					int	21h

 047F  B8 4406			bios_const:	mov	ax,4406h
 0482  BB 0001					mov	bx,1
 0485  CD 21					int	21h
 0487  E9 FE8E					jmp	go_cpm

 048A  B4 07			bios_conin:	mov	ah,7
 048C  CD 21					int	21h
 048E  E9 FE87					jmp	go_cpm

 0491  B4 06			bios_conout:	mov	ah,6
 0493  80 F9 FF					cmp	cl,0ffh
 0496  74 07					je	bios_conout1
 0498  8A D1					mov	dl,cl
 049A  CD 21					int	21h
 049C  E9 FE79					jmp	go_cpm

 049F  B2 00			bios_conout1:	mov	dl,00
 04A1  CD 21					int	21h
 04A3  E9 FE72					jmp	go_cpm

 04A6				bios_list:
 04A6				bios_punch:
 04A6				bios_reader:
 04A6				bios_listst:
 04A6				bios_home:
 04A6				bios_seldsk:
 04A6				bios_settrk:
 04A6				bios_setsec:
 04A6				bios_setdma:
 04A6				bios_read:
 04A6				bios_write:
 04A6				bios_sectran:
 04A6  E9 FEDC					jmp	bios_no_error
				;======================================
 04A9 43 50 2F 4D 20 32		open_msg		db	'CP/M 2.2 player for generic MS-DOS and V20/30 Rev. 1.00',0dh,0ah
       2E 32 20 70 6C 61
       79 65 72 20 66 6F
       72 20 67 65 6E 65
       72 69 63 20 4D 53
       2D 44 4F 53 20 61
       6E 64 20 56 32 30
       2F 33 30 20 52 65
       76 2E 20 31 2E 30
       30 0D 0A
 04E2  43 6F 70 79 72 69				db	'Copyright (c) 2025 by Gazelle',0dh,0ah,0ah,24h
       67 68 74 20 28 63
       29 20 32 30 32 35
       20 62 79 20 47 61
       7A 65 6C 6C 65 0D
       0A 0A 24
 0503 4E 6F 20 65 6E 6F		no_mem_msg		db	'No enough memory.$'
       75 67 68 20 6D 65
       6D 6F 72 79 2E 24
 0515 43 50 4D 20 66 69		cpm_open_error_msg	db	'CPM file open error.$'
       6C 65 20 6F 70 65
       6E 20 65 72 72 6F
       72 2E 24
 052A 43 50 4D 20 66 69		cpm_read_error_msg	db	'CPM file read error.$'
       6C 65 20 72 65 61
       64 20 65 72 72 6F
       72 2E 24
 053F 43 50 4D 20 66 69		cpm_close_error_msg	db	'CPM file close error.$'
       6C 65 20 63 6C 6F
       73 65 20 65 72 72
       6F 72 2E 24
 0555 74 6F 6F 20 6C 6F		too_long_path_msg	db	'too long path.$'
       6E 67 20 70 61 74
       68 2E 24
 0564 74 6F 6F 20 6C 61		too_large_com_msg	db	'too large COM file.$'
       72 67 65 20 43 4F
       4D 20 66 69 6C 65
       2E 24
 0578 4E 65 65 64 20 66		need_v30_msg		db	'Need for V20/30.$'
       6F 72 20 56 32 30
       2F 33 30 2E 24

 0589  BA 053F R		cpm_close_error:mov	dx,offset cpm_close_error_msg
 058C  EB 1E					jmp	error_exit
 058E  BA 0515 R		cpm_open_error:	mov	dx,offset cpm_open_error_msg
 0591  EB 19					jmp	error_exit
 0593  BA 052A R		cpm_read_error:	mov	dx,offset cpm_read_error_msg
 0596  EB 14					jmp	error_exit
 0598  BA 0503 R		no_mem:		mov	dx,offset no_mem_msg
 059B  EB 0F					jmp	error_exit
 059D  BA 0555 R		too_long_path:	mov	dx,offset too_long_path_msg
 05A0  EB 0A					jmp	error_exit
 05A2  BA 0564 R		too_large_com:	mov	dx,offset too_large_com_msg
 05A5  EB 05					jmp	error_exit
 05A7  BA 0578 R		need_v30:	mov	dx,offset need_v30_msg
 05AA  EB 00					jmp	error_exit

 05AC				error_exit:
 05AC  8C C8					mov	ax,cs
 05AE  8E D8					mov	ds,ax
 05B0  B4 09					mov	ah,9
 05B2  CD 21					int	21h
 05B4  B8 4C00					mov	ax,4c00h
 05B7  CD 21					int	21h
				;======================================

 05B9  8C C8			search_env:	mov	ax,cs
 05BB  8E C0					mov	es,ax
 05BD  2E: A1 002C				mov	ax,cs:[002ch]
 05C1  8E D8					mov	ds,ax
 05C3  BE 0000					mov	si,0
 05C6  FC					cld

 05C7				search_env_next_4:
 05C7  BB FFFF					mov	bx,0ffffh
 05CA  BF 0125 R				mov	di,offset env_key
 05CD  26: 8A 15				mov	dl,es:[di]
 05D0  AC					lodsb
 05D1				search_env_next_2:
 05D1  3A C2					cmp	al,dl
 05D3  74 18					je	search_env_match_1
 05D5				search_env_next_3:
 05D5  3C 00					cmp	al,0
 05D7  74 09					je	search_env_next_5
 05D9				search_env_next_1:
 05D9  AC					lodsb
 05DA  23 F6					and	si,si
 05DC  74 3E					je	search_env_exit_1
 05DE  3C 00					cmp	al,0
 05E0  75 F7					jne	search_env_next_1
 05E2				search_env_next_5:
 05E2  AC					lodsb
 05E3  23 F6					and	si,si
 05E5  74 35					je	search_env_exit_1
 05E7  3C 00					cmp	al,0
 05E9  74 34					je	search_env_exit
 05EB  EB E4					jmp	search_env_next_2

 05ED				search_env_match_1:
 05ED  8B DE					mov	bx,si
 05EF  4B					dec	bx

 05F0				search_env_match_3:
 05F0  AC					lodsb
 05F1  23 F6					and	si,si
 05F3  74 27					je	search_env_exit_1
 05F5  47					inc	di
 05F6  26: 8A 15				mov	dl,es:[di]
 05F9  3A C2					cmp	al,dl
 05FB  74 0B					je	search_env_match_2
 05FD				search_env_match_4:
 05FD  3C 00					cmp	al,0
 05FF  74 C6					je	search_env_next_4
 0601  AC					lodsb
 0602  23 F6					and	si,si
 0604  74 16					je	search_env_exit_1
 0606  EB F5					jmp	search_env_match_4
 0608				search_env_match_2:
 0608  3C 3D					cmp	al,'='
 060A  75 E4					jne	search_env_match_3

 060C  B9 0080					mov	cx,128
 060F  BF 012A R				mov	di,offset env_str
 0612				search_env_get:
 0612  AC					lodsb
 0613  AA					stosb
 0614  3C 00					cmp	al,0
 0616  74 07					je	search_env_exit
 0618  E2 F8					loop	search_env_get
 061A  EB 00					jmp	search_env_exit_1

 061C				search_env_exit_1:
 061C  BB FFFF					mov	bx,0ffffh
 061F				search_env_exit:
 061F  8C C8					mov	ax,cs
 0621  8E D8					mov	ds,ax
 0623  C3					ret
				;================================================
 0624				read_cpm_file:
 0624				read_cpm_00:
 0624  BF 01AA R				mov	di,offset cpm_file_name
 0627				read_cpm_0:
 0627  BE 0081					mov	si,81h
 062A  8A 0E 0080				mov	cl,ds:[80h]
 062E  B5 00					mov	ch,0
 0630  AC			read_cpm_01:	lodsb
 0631  3C 20					cmp	al,' '
 0633  74 FB					je	read_cpm_01
 0635  3C 09					cmp	al,09h
 0637  74 F7					je	read_cpm_01
 0639  4E					dec	si

 063A  AC			read_cpm_02:	lodsb
 063B  3C 20					cmp	al,' '
 063D  74 39					je	read_cpm_03
 063F  3C 0D					cmp	al,0dh
 0641  74 35					je	read_cpm_03
 0643  3C 00					cmp	al,0
 0645  74 31					je	read_cpm_03
 0647  3C 09					cmp	al,09h
 0649  74 2D					je	read_cpm_03
 064B  3C 3A					cmp	al,':'
 064D  75 1A					jne	read_cpm_04
 064F  80 FC 41					cmp	ah,'A'
 0652  72 15					jb	read_cpm_04
 0654  80 FC 5A					cmp	ah,'Z'
 0657  76 0A					jbe	read_cpm_06
 0659  80 FC 7A					cmp	ah,'z'
 065C  77 0B					ja	read_cpm_04
 065E  80 FC 61					cmp	ah,'a'
 0661  72 06					jb	read_cpm_04
 0663  2E: C6 06 0118 R		read_cpm_06:	mov	drv_flag,1
       01
 0669  3C 5C			read_cpm_04:	cmp	al,'\'
 066B  75 06					jne	read_cpm_05
 066D  2E: C6 06 0116 R				mov	path_flag,1
       01
 0673  AA			read_cpm_05:	stosb
 0674  8A E0					mov	ah,al
 0676  E2 C2					loop	read_cpm_02

 0678  4E			read_cpm_03:	dec	si
 0679  2E: 89 36 0112 R				mov	cpm_arg_offset,si
 067E  2E: 89 3E 0119 R				mov	file_name_end,di

 0683  4E					dec	si
 0684  B9 0004					mov	cx,4
 0687  FD			read_cpm_08:	std
 0688  AC					lodsb
 0689  3C 2E					cmp	al,'.'
 068B  74 25					je	read_cpm_09
 068D  E2 F8					loop	read_cpm_08

 068F  2E: 8B 3E 0119 R				mov	di,file_name_end
 0694  BE 0120 R				mov	si,offset cpm_str
 0697  FC					cld
 0698  A5					movsw
 0699  A5					movsw
 069A  A4					movsb

 069B  B8 3D00					mov	ax,3d00h
 069E  BA 01AA R				mov	dx,offset cpm_file_name
				;		call	disp_file_name
 06A1  CD 21					int	21h
 06A3  72 02					jc	read_cpm_10
 06A5  EB 5E					jmp	read_cpm_6

 06A7  2E: 8B 3E 0119 R		read_cpm_10:	mov	di,file_name_end
 06AC  BE 011B R				mov	si,offset com_str
 06AF  FC					cld
 06B0  A5					movsw
 06B1  A5					movsw
 06B2				read_cpm_09:
 06B2  B0 00					mov	al,0
 06B4  AA					stosb
 06B5  B8 3D00					mov	ax,3d00h
 06B8  BA 01AA R				mov	dx,offset cpm_file_name
				;		call	disp_file_name
 06BB  CD 21					int	21h
 06BD  72 02					jc	read_cpm_11
 06BF  EB 44					jmp	read_cpm_6
 06C1				read_cpm_11:
 06C1  2E: 80 3E 0117 R				cmp	env_flag,1
       01
 06C7  74 12					je	read_cpm_111
 06C9  2E: 80 3E 0118 R				cmp	drv_flag,1
       01
 06CF  74 0A					je	read_cpm_111
 06D1  2E: 80 3E 0116 R				cmp	path_flag,1
       01
 06D7  74 02					je	read_cpm_111
 06D9  EB 03					jmp	read_cpm_12
 06DB				read_cpm_111:
 06DB  E9 FEB0					jmp	cpm_open_error

 06DE  2E: C6 06 0117 R		read_cpm_12:	mov	env_flag,1
       01
 06E4  BE 012A R				mov	si,offset env_str
 06E7  BF 01AA R				mov	di,offset cpm_file_name
 06EA  FC					cld
 06EB  AC					lodsb
 06EC  22 C0					and	al,al
 06EE  74 EB					jz	read_cpm_111
 06F0  AA					stosb
 06F1  B9 007F					mov	cx,127
 06F4				read_cpm_1:
 06F4  AC					lodsb
 06F5  22 C0					and	al,al
 06F7  74 06					jz	read_cpm_2
 06F9  AA					stosb
 06FA  E2 F8					loop	read_cpm_1
 06FC  E9 FE9E					jmp	too_long_path
 06FF				read_cpm_2:
 06FF  B0 5C					mov	al,'\'
 0701  AA					stosb
 0702				read_cpm_3:
 0702  E9 FF22					jmp	read_cpm_0

 0705				read_cpm_6:
 0705  2E: A3 0110 R				mov	cpm_file_handle,ax
 0709  8B D8					mov	bx,ax
 070B  B4 3F					mov	ah,3fh
 070D  B9 FE00					mov	cx,0fe00h
 0710  2E: 8E 1E 010E R				mov	ds,z80_seg
 0715  BA 0100					mov	dx,100h
 0718  CD 21					int	21h
 071A  73 03					jnc	read_cpm_7
 071C  E9 FE74					jmp	cpm_read_error
 071F				read_cpm_7:
 071F  23 C0					and	ax,ax
 0721  75 03					jnz	read_cpm_71
 0723  E9 FE6D					jmp	cpm_read_error
 0726				read_cpm_71:
 0726  3D FE00					cmp	ax,0fe00h
 0729  75 03					jne	read_cpm_8
 072B  E9 FE74					jmp	too_large_com
 072E				read_cpm_8:
 072E  8C C8					mov	ax,cs
 0730  8E D8					mov	ds,ax
 0732  B4 3E					mov	ah,3eh
 0734  2E: 8B 1E 0110 R				mov	bx,cpm_file_handle
 0739  CD 21					int	21h
 073B  73 03					jnc	read_cpm_exit
 073D  E9 FE49					jmp	cpm_close_error
 0740				read_cpm_exit:
 0740  C3					ret
				;================================================
 0741				setup_cpm_area:
 0741  2E: 8E 06 010E R				mov	es,z80_seg
 0746  BF 0000					mov	di,0
 0749  B9 0080					mov	cx,80h
 074C  B8 0000					mov	ax,0
 074F  F3/ AB					rep	stosw

 0751  2E: 8B 36 0112 R				mov	si,cpm_arg_offset
 0756  BF 0080					mov	di,80h
 0759  8A 0D					mov	cl,ds:[di]
 075B  B5 00					mov	ch,0
 075D  81 C1 0081				add	cx,81h
 0761  2B CE					sub	cx,si
 0763  76 18					jbe	set_cpm_11

 0765  8A C1					mov	al,cl
 0767  FC					cld
 0768  AA					stosb
 0769  83 E1 7F					and	cx,7fh

 076C  AC			set_cpm_loop:	lodsb
 076D  3C 60					cmp	al,60h
 076F  76 06					jbe	set_cpm_10
 0771  3C 7B					cmp	al,7bh
 0773  73 02					jae	set_cpm_10
 0775  2C 20					sub	al,20h
 0777  AA			set_cpm_10:	stosb
 0778  E2 F2					loop	set_cpm_loop
 077A  B0 00					mov	al,0
 077C  AA					stosb
 077Dset_cpm_11:
 077D  2E: 8B 36 0112 R				mov	si,cpm_arg_offset

 0782  BF 005C					mov	di,5ch
 0785  B8 2901					mov	ax,2901h
 0788  CD 21					int	21h

 078A  BF 006C					mov	di,6ch
 078D  B8 2901					mov	ax,2901h
 0790  CD 21					int	21h

 0792  8C C8					mov	ax,cs
 0794  8E D8					mov	ds,ax
 0796  2E: 8E 06 010E R				mov	es,z80_seg
 079B  BE 07C6 R				mov	si,OFFSET CPM_zero_page_0
 079E  BF 0000					mov	di,0
 07A1  A5					movsw
 07A2  A5					movsw
 07A3  A5					movsw
 07A4  A5					movsw

 07A5  BF FF84					mov	di,CPM_BDOS
 07A8  BE 07CE R				mov	si,offset CPM_BDOS_code
 07AB  B9 0004					mov	cx,CPM_BDOS_end - CPM_BDOS_code
 07AE  F3/ A4					rep	movsb

 07B0  BF FF88					mov	di,CPM_BIOS
 07B3  BE 07D2 R				mov	si,offset CPM_BIOS_code
 07B6  B9 0073					mov	cx,CPM_BIOS_end - CPM_BIOS_code
 07B9  F3/ A4					rep	movsb

 07BB  26: 8C 06 0010				mov	es:[10h],es
 07C0  26: 8C 0E 0014				mov	es:[14h],cs

 07C5  C3					ret
				;------------------------------------------------
				;	CPM	memory image

 = FF84				CPM_BDOS	equ	0ff84h
 = FF88				CPM_BIOS	equ	0ff88h

				JP80		macro	addr
						db	0c3h		;JP instruction for Z80
						dw	addr - CPM_BIOS_code + CPM_BIOS
						endm

				BIOS80		macro	bios_code
						db	03eh,bios_code	;LD A,bios_code
						db	0edh,0fdh	;RETEM
						endm

 07C6 C3			CPM_zero_page_0	db	0c3h
 07C7  FF8B					dw	CPM_BIOS+3
 07C9 00			io_byte		db	0
 07CA 02			login_disk	db	2
 07CB C3			jmp_bdos	db	0c3h
 07CC  FF84					dw	CPM_BDOS

 07CE				CPM_BDOS_code:
 07CE  3E 00					db	03eh,00		;LD A,0
 07D0  ED FD					db	0edh,0fdh	;RETEM
 07D2				CPM_BDOS_end:

 07D2				CPM_BIOS_code:
						JP80	bios80_1
 07D2  C3		     1			db	0c3h		;JP instruction for Z80
 07D3  FFBB		     1			dw	bios80_1 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_1
 07D5  C3		     1			db	0c3h		;JP instruction for Z80
 07D6  FFBB		     1			dw	bios80_1 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_2
 07D8  C3		     1			db	0c3h		;JP instruction for Z80
 07D9  FFBF		     1			dw	bios80_2 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_3
 07DB  C3		     1			db	0c3h		;JP instruction for Z80
 07DC  FFC3		     1			dw	bios80_3 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_4
 07DE  C3		     1			db	0c3h		;JP instruction for Z80
 07DF  FFC7		     1			dw	bios80_4 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_5
 07E1  C3		     1			db	0c3h		;JP instruction for Z80
 07E2  FFCB		     1			dw	bios80_5 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_6
 07E4  C3		     1			db	0c3h		;JP instruction for Z80
 07E5  FFCF		     1			dw	bios80_6 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_7
 07E7  C3		     1			db	0c3h		;JP instruction for Z80
 07E8  FFD3		     1			dw	bios80_7 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_8
 07EA  C3		     1			db	0c3h		;JP instruction for Z80
 07EB  FFD7		     1			dw	bios80_8 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_9
 07ED  C3		     1			db	0c3h		;JP instruction for Z80
 07EE  FFDB		     1			dw	bios80_9 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_10
 07F0  C3		     1			db	0c3h		;JP instruction for Z80
 07F1  FFDF		     1			dw	bios80_10 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_11
 07F3  C3		     1			db	0c3h		;JP instruction for Z80
 07F4  FFE3		     1			dw	bios80_11 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_12
 07F6  C3		     1			db	0c3h		;JP instruction for Z80
 07F7  FFE7		     1			dw	bios80_12 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_13
 07F9  C3		     1			db	0c3h		;JP instruction for Z80
 07FA  FFEB		     1			dw	bios80_13 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_14
 07FC  C3		     1			db	0c3h		;JP instruction for Z80
 07FD  FFEF		     1			dw	bios80_14 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_15
 07FF  C3		     1			db	0c3h		;JP instruction for Z80
 0800  FFF3		     1			dw	bios80_15 - CPM_BIOS_code + CPM_BIOS
						JP80	bios80_16
 0802  C3		     1			db	0c3h		;JP instruction for Z80
 0803  FFF7		     1			dw	bios80_16 - CPM_BIOS_code + CPM_BIOS

 0805				bios80_1:	BIOS80	1
 0805  3E 01		     1			db	03eh,1	;LD A,bios_code
 0807  ED FD		     1			db	0edh,0fdh	;RETEM
 0809				bios80_2:	BIOS80	2
 0809  3E 02		     1			db	03eh,2	;LD A,bios_code
 080B  ED FD		     1			db	0edh,0fdh	;RETEM
 080D				bios80_3:	BIOS80	3
 080D  3E 03		     1			db	03eh,3	;LD A,bios_code
 080F  ED FD		     1			db	0edh,0fdh	;RETEM
 0811				bios80_4:	BIOS80	4
 0811  3E 04		     1			db	03eh,4	;LD A,bios_code
 0813  ED FD		     1			db	0edh,0fdh	;RETEM
 0815				bios80_5:	BIOS80	5
 0815  3E 05		     1			db	03eh,5	;LD A,bios_code
 0817  ED FD		     1			db	0edh,0fdh	;RETEM
 0819				bios80_6:	BIOS80	6
 0819  3E 06		     1			db	03eh,6	;LD A,bios_code
 081B  ED FD		     1			db	0edh,0fdh	;RETEM
 081D				bios80_7:	BIOS80	7
 081D  3E 07		     1			db	03eh,7	;LD A,bios_code
 081F  ED FD		     1			db	0edh,0fdh	;RETEM
 0821				bios80_8:	BIOS80	8
 0821  3E 08		     1			db	03eh,8	;LD A,bios_code
 0823  ED FD		     1			db	0edh,0fdh	;RETEM
 0825				bios80_9:	BIOS80	9
 0825  3E 09		     1			db	03eh,9	;LD A,bios_code
 0827  ED FD		     1			db	0edh,0fdh	;RETEM
 0829				bios80_10:	BIOS80	10
 0829  3E 0A		     1			db	03eh,10	;LD A,bios_code
 082B  ED FD		     1			db	0edh,0fdh	;RETEM
 082D				bios80_11:	BIOS80	11
 082D  3E 0B		     1			db	03eh,11	;LD A,bios_code
 082F  ED FD		     1			db	0edh,0fdh	;RETEM
 0831				bios80_12:	BIOS80	12
 0831  3E 0C		     1			db	03eh,12	;LD A,bios_code
 0833  ED FD		     1			db	0edh,0fdh	;RETEM
 0835				bios80_13:	BIOS80	13
 0835  3E 0D		     1			db	03eh,13	;LD A,bios_code
 0837  ED FD		     1			db	0edh,0fdh	;RETEM
 0839				bios80_14:	BIOS80	14
 0839  3E 0E		     1			db	03eh,14	;LD A,bios_code
 083B  ED FD		     1			db	0edh,0fdh	;RETEM
 083D				bios80_15:	BIOS80	15
 083D  3E 0F		     1			db	03eh,15	;LD A,bios_code
 083F  ED FD		     1			db	0edh,0fdh	;RETEM
 0841				bios80_16:	BIOS80	16
 0841  3E 10		     1			db	03eh,16	;LD A,bios_code
 0843  ED FD		     1			db	0edh,0fdh	;RETEM

 0845				CPM_bios_end:
				;======================================
 0845  52			dsphex4:	push	dx
 0846  8B D0					mov	dx,ax
 0848  8A C4					mov	al,ah
 084A  E8 0003					call	dsphex2
 084D  8B C2					mov	ax,dx
 084F  5A					pop	dx

 0850  52			dsphex2:	push	dx
 0851  8A D0					mov	dl,al
 0853  D0 E8					shr	al,1
 0855  D0 E8					shr	al,1
 0857  D0 E8					shr	al,1
 0859  D0 E8					shr	al,1
 085B  E8 0003					call	dsphex1
 085E  8A C2					mov	al,dl
 0860  5A					pop	dx

 0861  52			dsphex1:	push	dx
 0862  24 0F					and	al,0fh
 0864  3C 09					cmp	al,9
 0866  76 02					jbe	dsphex1_1
 0868  04 07					add	al,'@'-'9'
 086A  04 30			dsphex1_1:	add	al,'0'
 086C  8A D0					mov	dl,al
 086E  B4 02					mov	ah,2
 0870  CD 21					int	21h
 0872  5A					pop	dx
 0873  C3					ret
				;======================================
 0874				disp_file_name:
 0874  60					pusha
 0875  8B F2					mov	si,dx
 0877  FC					cld
 0878  B9 0080					mov	cx,128
 087B				disp_file_name_loop:
 087B  AC					lodsb
 087C  3C 00					cmp	al,0
 087E  74 08					je	disp_file_name_exit
 0880  8A D0					mov	dl,al
 0882  B4 02					mov	ah,2
 0884  CD 21					int	21h
 0886  E2 F3					loop	disp_file_name_loop
 0888				disp_file_name_exit:
 0888  B2 0D					mov	dl,0dh
 088A  B4 02					mov	ah,02
 088C  CD 21					int	21h
 088E  B2 0A					mov	dl,0ah
 0890  B4 02					mov	ah,2
 0892  CD 21					int	21h
 0894  61					popa
 0895  C3					ret
				;======================================
					end	start
 
Microsoft (R) Macro Assembler Version 6.00AD    	    06/21/25 18:53:14
v308080.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

BIOS80 . . . . . . . . . . . . .	Proc
JP80 . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 0896	  Word	  Public  'CODE'	
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0001h	 
@code  . . . . . . . . . . . . .	Text   	 DGROUP
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BDOS_no_error  . . . . . . . . .	L Near	 038C	  _TEXT	
BIOS_no_error  . . . . . . . . .	L Near	 0385	  _TEXT	
CPM_BDOS_code  . . . . . . . . .	L Near	 07CE	  _TEXT	
CPM_BDOS_end . . . . . . . . . .	L Near	 07D2	  _TEXT	
CPM_BDOS . . . . . . . . . . . .	Number	 FF84h	 
CPM_BIOS_code  . . . . . . . . .	L Near	 07D2	  _TEXT	
CPM_BIOS . . . . . . . . . . . .	Number	 FF88h	 
CPM_bios_end . . . . . . . . . .	L Near	 0845	  _TEXT	
CPM_zero_page_0  . . . . . . . .	Byte	 07C6	  _TEXT	
bdos_bios_em_err . . . . . . . .	L Near	 038F	  _TEXT	
bdos_const . . . . . . . . . . .	L Near	 03FB	  _TEXT	
bdos_no_error_msg  . . . . . . .	Byte	 0359	  _TEXT	
bdos_noready . . . . . . . . . .	L Near	 0405	  _TEXT	
bdos_punch . . . . . . . . . . .	L Near	 0455	  _TEXT	
bdos_read_exit . . . . . . . . .	L Near	 043D	  _TEXT	
bdos_reader  . . . . . . . . . .	L Near	 0455	  _TEXT	
bdos_read  . . . . . . . . . . .	L Near	 0433	  _TEXT	
bdos_table . . . . . . . . . . .	Word	 03A2	  _TEXT	
bios80_10  . . . . . . . . . . .	L Near	 0829	  _TEXT	
bios80_11  . . . . . . . . . . .	L Near	 082D	  _TEXT	
bios80_12  . . . . . . . . . . .	L Near	 0831	  _TEXT	
bios80_13  . . . . . . . . . . .	L Near	 0835	  _TEXT	
bios80_14  . . . . . . . . . . .	L Near	 0839	  _TEXT	
bios80_15  . . . . . . . . . . .	L Near	 083D	  _TEXT	
bios80_16  . . . . . . . . . . .	L Near	 0841	  _TEXT	
bios80_1 . . . . . . . . . . . .	L Near	 0805	  _TEXT	
bios80_2 . . . . . . . . . . . .	L Near	 0809	  _TEXT	
bios80_3 . . . . . . . . . . . .	L Near	 080D	  _TEXT	
bios80_4 . . . . . . . . . . . .	L Near	 0811	  _TEXT	
bios80_5 . . . . . . . . . . . .	L Near	 0815	  _TEXT	
bios80_6 . . . . . . . . . . . .	L Near	 0819	  _TEXT	
bios80_7 . . . . . . . . . . . .	L Near	 081D	  _TEXT	
bios80_8 . . . . . . . . . . . .	L Near	 0821	  _TEXT	
bios80_9 . . . . . . . . . . . .	L Near	 0825	  _TEXT	
bios_boot  . . . . . . . . . . .	L Near	 047A	  _TEXT	
bios_conin . . . . . . . . . . .	L Near	 048A	  _TEXT	
bios_conout1 . . . . . . . . . .	L Near	 049F	  _TEXT	
bios_conout  . . . . . . . . . .	L Near	 0491	  _TEXT	
bios_const . . . . . . . . . . .	L Near	 047F	  _TEXT	
bios_home  . . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_listst  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_list  . . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_no_error_msg  . . . . . . .	Byte	 036F	  _TEXT	
bios_punch . . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_reader  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_read  . . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_sectran . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_seldsk  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_setdma  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_setsec  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_settrk  . . . . . . . . . .	L Near	 04A6	  _TEXT	
bios_table . . . . . . . . . . .	Word	 0458	  _TEXT	
bios_wboot . . . . . . . . . . .	L Near	 047A	  _TEXT	
bios_write . . . . . . . . . . .	L Near	 04A6	  _TEXT	
buffer_area  . . . . . . . . . .	Byte	 022A	  _TEXT	
com_str  . . . . . . . . . . . .	Byte	 011B	  _TEXT	
cpm_arg_offset . . . . . . . . .	Word	 0112	  _TEXT	
cpm_close_error_msg  . . . . . .	Byte	 053F	  _TEXT	
cpm_close_error  . . . . . . . .	L Near	 0589	  _TEXT	
cpm_file_handle  . . . . . . . .	Word	 0110	  _TEXT	
cpm_file_name  . . . . . . . . .	Byte	 01AA	  _TEXT	
cpm_open_error_msg . . . . . . .	Byte	 0515	  _TEXT	
cpm_open_error . . . . . . . . .	L Near	 058E	  _TEXT	
cpm_read_error_msg . . . . . . .	Byte	 052A	  _TEXT	
cpm_read_error . . . . . . . . .	L Near	 0593	  _TEXT	
cpm_str  . . . . . . . . . . . .	Byte	 0120	  _TEXT	
disp_file_name_exit  . . . . . .	L Near	 0888	  _TEXT	
disp_file_name_loop  . . . . . .	L Near	 087B	  _TEXT	
disp_file_name . . . . . . . . .	L Near	 0874	  _TEXT	
drv_flag . . . . . . . . . . . .	Byte	 0118	  _TEXT	
dsphex1_1  . . . . . . . . . . .	L Near	 086A	  _TEXT	
dsphex1  . . . . . . . . . . . .	L Near	 0861	  _TEXT	
dsphex2  . . . . . . . . . . . .	L Near	 0850	  _TEXT	
dsphex4  . . . . . . . . . . . .	L Near	 0845	  _TEXT	
env_flag . . . . . . . . . . . .	Byte	 0117	  _TEXT	
env_key  . . . . . . . . . . . .	Byte	 0125	  _TEXT	
env_str  . . . . . . . . . . . .	Byte	 012A	  _TEXT	
error_exit . . . . . . . . . . .	L Near	 05AC	  _TEXT	
fcb_addr . . . . . . . . . . . .	Word	 0114	  _TEXT	
file_name_end  . . . . . . . . .	Word	 0119	  _TEXT	
file_search1 . . . . . . . . . .	L Near	 041B	  _TEXT	
file_search2 . . . . . . . . . .	L Near	 0427	  _TEXT	
get_DPB_addr . . . . . . . . . .	L Near	 0455	  _TEXT	
get_alloc_addr . . . . . . . . .	L Near	 0455	  _TEXT	
get_io_byte  . . . . . . . . . .	L Near	 0408	  _TEXT	
get_login_vect . . . . . . . . .	L Near	 0455	  _TEXT	
get_ro_vect  . . . . . . . . . .	L Near	 0455	  _TEXT	
get_set_user . . . . . . . . . .	L Near	 0440	  _TEXT	
get_version  . . . . . . . . . .	L Near	 0415	  _TEXT	
go_cpm . . . . . . . . . . . . .	L Near	 0318	  _TEXT	
hajime . . . . . . . . . . . . .	L Near	 02AA	  _TEXT	
int_no . . . . . . . . . . . . .	Number	 00FFh	 
io_byte  . . . . . . . . . . . .	Byte	 07C9	  _TEXT	
jmp_bdos . . . . . . . . . . . .	Byte	 07CB	  _TEXT	
login_disk . . . . . . . . . . .	Byte	 07CA	  _TEXT	
main_read_emulator . . . . . . .	L Near	 02D6	  _TEXT	
need_v30_msg . . . . . . . . . .	Byte	 0578	  _TEXT	
need_v30 . . . . . . . . . . . .	L Near	 05A7	  _TEXT	
no_mem_msg . . . . . . . . . . .	Byte	 0503	  _TEXT	
no_mem . . . . . . . . . . . . .	L Near	 0598	  _TEXT	
no_op  . . . . . . . . . . . . .	L Near	 0318	  _TEXT	
open_msg . . . . . . . . . . . .	Byte	 04A9	  _TEXT	
path_flag  . . . . . . . . . . .	Byte	 0116	  _TEXT	
read_cpm_00  . . . . . . . . . .	L Near	 0624	  _TEXT	
read_cpm_01  . . . . . . . . . .	L Near	 0630	  _TEXT	
read_cpm_02  . . . . . . . . . .	L Near	 063A	  _TEXT	
read_cpm_03  . . . . . . . . . .	L Near	 0678	  _TEXT	
read_cpm_04  . . . . . . . . . .	L Near	 0669	  _TEXT	
read_cpm_05  . . . . . . . . . .	L Near	 0673	  _TEXT	
read_cpm_06  . . . . . . . . . .	L Near	 0663	  _TEXT	
read_cpm_08  . . . . . . . . . .	L Near	 0687	  _TEXT	
read_cpm_09  . . . . . . . . . .	L Near	 06B2	  _TEXT	
read_cpm_0 . . . . . . . . . . .	L Near	 0627	  _TEXT	
read_cpm_10  . . . . . . . . . .	L Near	 06A7	  _TEXT	
read_cpm_111 . . . . . . . . . .	L Near	 06DB	  _TEXT	
read_cpm_11  . . . . . . . . . .	L Near	 06C1	  _TEXT	
read_cpm_12  . . . . . . . . . .	L Near	 06DE	  _TEXT	
read_cpm_1 . . . . . . . . . . .	L Near	 06F4	  _TEXT	
read_cpm_2 . . . . . . . . . . .	L Near	 06FF	  _TEXT	
read_cpm_3 . . . . . . . . . . .	L Near	 0702	  _TEXT	
read_cpm_6 . . . . . . . . . . .	L Near	 0705	  _TEXT	
read_cpm_71  . . . . . . . . . .	L Near	 0726	  _TEXT	
read_cpm_7 . . . . . . . . . . .	L Near	 071F	  _TEXT	
read_cpm_8 . . . . . . . . . . .	L Near	 072E	  _TEXT	
read_cpm_exit  . . . . . . . . .	L Near	 0740	  _TEXT	
read_cpm_file  . . . . . . . . .	L Near	 0624	  _TEXT	
reset_disk2  . . . . . . . . . .	L Near	 0455	  _TEXT	
save_al  . . . . . . . . . . . .	Byte	 0104	  _TEXT	
save_ax  . . . . . . . . . . . .	Word	 0104	  _TEXT	
save_bp  . . . . . . . . . . . .	Word	 010C	  _TEXT	
save_bx  . . . . . . . . . . . .	Word	 0106	  _TEXT	
save_cx  . . . . . . . . . . . .	Word	 0108	  _TEXT	
save_dx  . . . . . . . . . . . .	Word	 010A	  _TEXT	
search_env_exit_1  . . . . . . .	L Near	 061C	  _TEXT	
search_env_exit  . . . . . . . .	L Near	 061F	  _TEXT	
search_env_get . . . . . . . . .	L Near	 0612	  _TEXT	
search_env_match_1 . . . . . . .	L Near	 05ED	  _TEXT	
search_env_match_2 . . . . . . .	L Near	 0608	  _TEXT	
search_env_match_3 . . . . . . .	L Near	 05F0	  _TEXT	
search_env_match_4 . . . . . . .	L Near	 05FD	  _TEXT	
search_env_next_1  . . . . . . .	L Near	 05D9	  _TEXT	
search_env_next_2  . . . . . . .	L Near	 05D1	  _TEXT	
search_env_next_3  . . . . . . .	L Near	 05D5	  _TEXT	
search_env_next_4  . . . . . . .	L Near	 05C7	  _TEXT	
search_env_next_5  . . . . . . .	L Near	 05E2	  _TEXT	
search_env . . . . . . . . . . .	L Near	 05B9	  _TEXT	
set_cpm_10 . . . . . . . . . . .	L Near	 0777	  _TEXT	
set_cpm_11 . . . . . . . . . . .	L Near	 077D	  _TEXT	
set_cpm_loop . . . . . . . . . .	L Near	 076C	  _TEXT	
set_file_attr  . . . . . . . . .	L Near	 0455	  _TEXT	
set_io_byte  . . . . . . . . . .	L Near	 040E	  _TEXT	
set_ro . . . . . . . . . . . . .	L Near	 0455	  _TEXT	
set_user_code_0  . . . . . . . .	L Near	 0452	  _TEXT	
set_user_code  . . . . . . . . .	L Near	 044A	  _TEXT	
setup_cpm_area . . . . . . . . .	L Near	 0741	  _TEXT	
sonomama . . . . . . . . . . . .	L Near	 03F4	  _TEXT	
start  . . . . . . . . . . . . .	L Near	 0100	  _TEXT	
to_bdos  . . . . . . . . . . . .	L Near	 0349	  _TEXT	
too_large_com_msg  . . . . . . .	Byte	 0564	  _TEXT	
too_large_com  . . . . . . . . .	L Near	 05A2	  _TEXT	
too_long_path_msg  . . . . . . .	Byte	 0555	  _TEXT	
too_long_path  . . . . . . . . .	L Near	 059D	  _TEXT	
using_v30_1  . . . . . . . . . .	L Near	 02B3	  _TEXT	
using_v30  . . . . . . . . . . .	L Near	 02BD	  _TEXT	
z80_seg  . . . . . . . . . . . .	Word	 010E	  _TEXT	

	   0 Warnings
	   0 Errors
